/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProyectosIndexRouteImport } from './routes/proyectos/index'
import { Route as ProyectosProyectoIdIndexRouteImport } from './routes/proyectos/$proyectoId/index'
import { Route as ProyectosComponentsCardRouteImport } from './routes/proyectos/components/card'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProyectosIndexRoute = ProyectosIndexRouteImport.update({
  id: '/proyectos/',
  path: '/proyectos/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProyectosProyectoIdIndexRoute =
  ProyectosProyectoIdIndexRouteImport.update({
    id: '/proyectos/$proyectoId/',
    path: '/proyectos/$proyectoId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const ProyectosComponentsCardRoute = ProyectosComponentsCardRouteImport.update({
  id: '/proyectos/components/card',
  path: '/proyectos/components/card',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/proyectos': typeof ProyectosIndexRoute
  '/proyectos/components/card': typeof ProyectosComponentsCardRoute
  '/proyectos/$proyectoId': typeof ProyectosProyectoIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/proyectos': typeof ProyectosIndexRoute
  '/proyectos/components/card': typeof ProyectosComponentsCardRoute
  '/proyectos/$proyectoId': typeof ProyectosProyectoIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/proyectos/': typeof ProyectosIndexRoute
  '/proyectos/components/card': typeof ProyectosComponentsCardRoute
  '/proyectos/$proyectoId/': typeof ProyectosProyectoIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/proyectos'
    | '/proyectos/components/card'
    | '/proyectos/$proyectoId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/proyectos'
    | '/proyectos/components/card'
    | '/proyectos/$proyectoId'
  id:
    | '__root__'
    | '/'
    | '/proyectos/'
    | '/proyectos/components/card'
    | '/proyectos/$proyectoId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProyectosIndexRoute: typeof ProyectosIndexRoute
  ProyectosComponentsCardRoute: typeof ProyectosComponentsCardRoute
  ProyectosProyectoIdIndexRoute: typeof ProyectosProyectoIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/proyectos/': {
      id: '/proyectos/'
      path: '/proyectos'
      fullPath: '/proyectos'
      preLoaderRoute: typeof ProyectosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/proyectos/$proyectoId/': {
      id: '/proyectos/$proyectoId/'
      path: '/proyectos/$proyectoId'
      fullPath: '/proyectos/$proyectoId'
      preLoaderRoute: typeof ProyectosProyectoIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/proyectos/components/card': {
      id: '/proyectos/components/card'
      path: '/proyectos/components/card'
      fullPath: '/proyectos/components/card'
      preLoaderRoute: typeof ProyectosComponentsCardRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProyectosIndexRoute: ProyectosIndexRoute,
  ProyectosComponentsCardRoute: ProyectosComponentsCardRoute,
  ProyectosProyectoIdIndexRoute: ProyectosProyectoIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
